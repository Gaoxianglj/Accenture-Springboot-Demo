<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.accenturespringbootdemo.dao.LoginLogDao">

    <resultMap type="com.example.accenturespringbootdemo.entity.LoginLog" id="LoginLogMap">
        <result property="logId" column="log_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userType" column="user_type" jdbcType="INTEGER"/>
        <result property="loginDateTime" column="login_date_time" jdbcType="TIMESTAMP"/>
        <result property="updateDateTime" column="update_date_time" jdbcType="TIMESTAMP"/>
        <result property="deleteFlag" column="delete_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="LoginLogMap">
        select
          log_id, user_id, user_type, login_date_time, update_date_time, delete_flag
        from login_log
        where log_id = #{logId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="LoginLogMap">
        select
          log_id, user_id, user_type, login_date_time, update_date_time, delete_flag
        from login_log
        <where>
            <if test="loginLog.logId != null">
                and log_id = #{loginLog.logId}
            </if>
            <if test="loginLog.userId != null">
                and user_id = #{loginLog.userId}
            </if>
            <if test="loginLog.userType != null">
                and user_type = #{loginLog.userType}
            </if>
            <if test="loginLog.loginDateTime != null">
                and login_date_time = #{loginLog.loginDateTime}
            </if>
            <if test="loginLog.updateDateTime != null">
                and update_date_time = #{loginLog.updateDateTime}
            </if>
            <if test="loginLog.deleteFlag != null">
                and delete_flag = #{loginLog.deleteFlag}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from login_log
        <where>
            <if test="logId != null">
                and log_id = #{logId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="userType != null">
                and user_type = #{userType}
            </if>
            <if test="loginDateTime != null">
                and login_date_time = #{loginDateTime}
            </if>
            <if test="updateDateTime != null">
                and update_date_time = #{updateDateTime}
            </if>
            <if test="deleteFlag != null">
                and delete_flag = #{deleteFlag}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="logId" useGeneratedKeys="true">
        insert into login_log(user_id, user_type, login_date_time, update_date_time, delete_flag)
        values (#{userId}, #{userType}, #{loginDateTime}, #{updateDateTime}, #{deleteFlag})
    </insert>

    <insert id="insertBatch" keyProperty="logId" useGeneratedKeys="true">
        insert into login_log(user_id, user_type, login_date_time, update_date_time, delete_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userId}, #{entity.userType}, #{entity.loginDateTime}, #{entity.updateDateTime}, #{entity.deleteFlag})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="logId" useGeneratedKeys="true">
        insert into login_log(user_id, user_type, login_date_time, update_date_time, delete_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{loginLog.userId}, #{loginLog.userType}, #{loginLog.loginDateTime}, #{loginLog.updateDateTime}, #{loginLog.deleteFlag})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        user_type = values(user_type),
        login_date_time = values(login_date_time),
        update_date_time = values(update_date_time),
        delete_flag = values(delete_flag)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update login_log
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="userType != null">
                user_type = #{userType},
            </if>
            <if test="loginDateTime != null">
                login_date_time = #{loginDateTime},
            </if>
            <if test="updateDateTime != null">
                update_date_time = #{updateDateTime},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag},
            </if>
        </set>
        where log_id = #{logId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from login_log where log_id = #{logId}
    </delete>

</mapper>

